<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context" 
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" >


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />
    
        
    <!-- Config parÃ¡metros generales-->
    <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location">
            <beans:value>classpath:/config.properties</beans:value>
        </beans:property>
    </beans:bean>

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    
    <!--Implements Spring Scope-->
    <beans:bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <beans:property name="scopes">
            <beans:map>
                <beans:entry key="view">
                    <beans:bean class="mx.mc.init.CustomScope"/>
                </beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>    
    
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<beans:property name="prefix" value="/" />
	<beans:property name="suffix" value=".xhtml" />
    </beans:bean>
    
    
    <!-- Config messages to i18n -->
    <beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="classpath:i18n/messages_es" />
        <beans:property name="defaultEncoding" value="UTF-8" />
    </beans:bean>
    
    
    <!-- Enable Cookie to i118n -->
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <beans:property name="defaultLocale" value="es" />
        <beans:property name="cookieName" value="myAppLocaleCookie" />
        <beans:property name="cookieMaxAge" value="3600" />
    </beans:bean>


    <!-- Interceptors locale to i118n -->
    <interceptors>
        <beans:bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <beans:property name="paramName" value="locale" />
        </beans:bean>
    </interceptors>
    
    <!-- DataSoruce MyBatis MySQL Server Unidosis -->
    <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="${jdbc.mysql.datasource}" />
        <beans:property name="lookupOnStartup" value="true" />
        <beans:property name="cache" value="true" />
        <beans:property name="proxyInterface" value="javax.sql.DataSource" />
    </beans:bean>
    
    <!-- DataSoruce MyBatis MS SQLServer Ulises -->
    <!--beans:bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <beans:property name="driverClassName" value="${mssql.driverClassName}" />
        <beans:property name="url" value="${mssql.url}" />
        <beans:property name="username" value="${mssql.username}" />
        <beans:property name="password" value="${mssql.password}" />
    </beans:bean-->
    <beans:bean id="dataSource2" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="${jdbc.mssql.datasource}" />
        <beans:property name="lookupOnStartup" value="true" />
        <beans:property name="cache" value="true" />
        <beans:property name="proxyInterface" value="javax.sql.DataSource" />
    </beans:bean>
        
    <!--Define Multidatabase-->
    <beans:bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <beans:property name="properties">
            <beans:props>
                <beans:prop key="SQL Server">sqlserver</beans:prop>
                <beans:prop key="DB2">db2</beans:prop>
                <beans:prop key="Oracle">oracle</beans:prop>
                <beans:prop key="Informix">informix</beans:prop>
                <beans:prop key="MySQL">mysql</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <beans:bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <beans:property name="properties" ref="vendorProperties" />
    </beans:bean>
    
    
    <!--Define El FactoryBean-->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="configLocation" value="classpath:mybatis-config.xml" />
        <beans:property name="databaseIdProvider" ref="databaseIdProvider" />
        <beans:property name="mapperLocations" value="classpath*:config/mappers/**/*.xml" />
        <beans:property name="typeAliasesPackage" value="mx.mc.model" />
    </beans:bean>
    
    
    <!--Configura el Scanner de los Mappers-->
    <beans:bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="mx.mc.mapper" />
        <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </beans:bean>
        
    <context:component-scan base-package="mx.mc, com.seidor.ulises" />
    
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource" ></beans:property>
    </beans:bean>
    
    <!--Define Transaccion Manager-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <beans:bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <beans:bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />
 
    <!-- BD Ulises -->
    <beans:bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <beans:property name="dataSource" ref="dataSource2" />
        <beans:property name="configLocation" value="classpath:mybatis-config.xml" />
        <beans:property name="databaseIdProvider" ref="databaseIdProvider" />
        <beans:property name="mapperLocations" value="classpath*:config/mappers2/**/*.xml" />
        <beans:property name="typeAliasesPackage" value="com.seidor.ulises.model" />
    </beans:bean>
    
    <beans:bean id="mapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.seidor.ulises.mapper" />
        <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
    </beans:bean>
    
    <beans:bean id="transactionManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource2" ></beans:property>
    </beans:bean>
    
    <context:annotation-config/>   
</beans:beans>