<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.seidor.ulises.mapper.ExpPeticRepoMapper" >
    <select id="obtener" resultType="com.seidor.ulises.model.ExpPeticRepo" parameterType="com.seidor.ulises.model.ExpPeticRepo" >
        SELECT id,
            repo,
            articulo,
            lote,
            formato,
            cantidad,
            tratado,
            error,
            fechaTratado,
            version,
            tipoAlmacen
        FROM expPeticRepo
        WHERE 1=1
        <if test=" repo != null ">
            AND repo = #{ repo , jdbcType = INTEGER }
        </if>
        <if test=" articulo != null ">
            AND articulo = #{ articulo , jdbcType = VARCHAR }
        </if>
        <if test=" lote != null ">
            AND lote = #{ lote , jdbcType = VARCHAR }
        </if>
        <if test=" formato != null ">
            AND formato = #{ formato , jdbcType = VARCHAR }
        </if>
        <if test=" cantidad != null ">
            AND cantidad = #{ cantidad , jdbcType = DOUBLE }
        </if>
        <if test=" tratado != null ">
            AND tratado = #{ tratado , jdbcType = VARCHAR }
        </if>
        <if test=" error != null ">
            AND error = #{ error , jdbcType = VARCHAR }
        </if>
        <if test=" fechaTratado != null ">
            AND fechaTratado = #{ fechaTratado , jdbcType = TIMESTAMP }
        </if>
        <if test=" version != null ">
            AND version = #{ version , jdbcType = INTEGER }
        </if>
        <if test=" tipoAlmacen != null ">
            AND tipoAlmacen = #{ tipoAlmacen , jdbcType = VARCHAR }
        </if>
        LIMIT 0, 1
    </select>

    <select id="obtenerLista" resultType="com.seidor.ulises.model.ExpPeticRepo" parameterType="com.seidor.ulises.model.ExpPeticRepo" >
        SELECT id,
            repo,
            articulo,
            lote,
            formato,
            cantidad,
            tratado,
            error,
            fechaTratado,
            version,
            tipoAlmacen
        FROM expPeticRepo
        WHERE 1=1
        <if test=" repo != null ">
            AND repo = #{ repo , jdbcType = INTEGER }
        </if>
        <if test=" articulo != null ">
            AND articulo = #{ articulo , jdbcType = VARCHAR }
        </if>
        <if test=" lote != null ">
            AND lote = #{ lote , jdbcType = VARCHAR }
        </if>
        <if test=" formato != null ">
            AND formato = #{ formato , jdbcType = VARCHAR }
        </if>
        <if test=" cantidad != null ">
            AND cantidad = #{ cantidad , jdbcType = DOUBLE }
        </if>
        <if test=" tratado != null ">
            AND tratado = #{ tratado , jdbcType = VARCHAR }
        </if>
        <if test=" error != null ">
            AND error = #{ error , jdbcType = VARCHAR }
        </if>
        <if test=" fechaTratado != null ">
            AND fechaTratado = #{ fechaTratado , jdbcType = TIMESTAMP }
        </if>
        <if test=" version != null ">
            AND version = #{ version , jdbcType = INTEGER }
        </if>
        <if test=" tipoAlmacen != null ">
            AND tipoAlmacen = #{ tipoAlmacen , jdbcType = VARCHAR }
        </if>
    </select>
        
    <update id="actualizar" parameterType="com.seidor.ulises.model.ExpPeticRepo" >
        UPDATE expPeticRepo SET
            tratado = #{ expPeticRepo.tratado , jdbcType = VARCHAR }
            , fechaTratado = #{ expPeticRepo.fechaTratado , jdbcType = TIMESTAMP }
        WHERE id = #{ expPeticRepo.id , jdbcType = INTEGER }
    </update>

    <update id="actualizarLista" parameterType="java.util.List" useGeneratedKeys="false" >
        <foreach collection="listExpPeticRepo" item="item"  index="index"  separator=";">
            UPDATE expPeticRepo 
            <set>
                tratado = #{ item.tratado , jdbcType = VARCHAR }
                , fechaTratado = #{ item.fechaTratado , jdbcType = TIMESTAMP }
            </set>
            WHERE id = #{ item.id , jdbcType = INTEGER }
        </foreach>
    </update>
</mapper>