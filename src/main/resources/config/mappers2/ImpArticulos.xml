<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.seidor.ulises.mapper.ImpArticulosMapper" >
    <select id="obtener" resultType="com.seidor.ulises.model.ImpArticulos" parameterType="com.seidor.ulises.model.ImpArticulos" >
        SELECT id,
            articulo,
            descripcion,
            rotacion,
            algoritmoEntrada,
            algoritmoSalida,
            controlLote,
            peso,
            alto,
            largo,
            ancho,
            pathImagen,
            controlStock,
            agrupaPicksSalida,
            familia,
            controlNumeroSerie,
            unidadMedidaPicking,
            pesableMesa,
            unidadMedidaPeso,
            unidadMedidaVolumen,
            tipoKit,
            tipoFlujo,
            epicentro,
            precio,
            datoExtra1,
            datoExtra2,
            datoExtra3,
            repartirCarruseles,
            tratado,
            error,
            fechaTratado,
            version,
            controlFormato,
            tipoArticulo,
            tipoFisico,
            nivEmbal1,
            nivEmbal2,
            nivEmbal3,
            nivEmbal4,
            nivEmbal5,
            precioVenta,
            subFamilia,
            ubicacionExterna,
            controlExterno,
            pedirPassScanner,
            obsoleto,
            orden,
            tipoInventario,
            clasificaciones,
            valoresClasificaciones,
            fechaCreacion,
            controlFechaCaducidad,
            estadoStockConteo,
            proveedor,
            volumen,
            controlCalidad,
            latenciaEnvio,
            latenciaRecepcion,
            tipoEmpaquetado,
            codigoAntiguo,
            codigoProveedor,
            diasCaducidad,
            estadoCalidad,
            grupoCalidad,
            gestionCinta,
            mantenerLoteMismoLoteProveedor,
            controlLoteFabricacion,
            generarLoteInternoEntrada,
            checkListDescarga,
            refrigerado,
            propietario
        FROM impArticulos
        WHERE 1=1
        <if test=" articulo != null ">
            AND articulo = #{ articulo , jdbcType = VARCHAR }
        </if>
        <if test=" descripcion != null ">
            AND descripcion = #{ descripcion , jdbcType = VARCHAR }
        </if>
        <if test=" rotacion != null ">
            AND rotacion = #{ rotacion , jdbcType = VARCHAR }
        </if>
        <if test=" algoritmoEntrada != null ">
            AND algoritmoEntrada = #{ algoritmoEntrada , jdbcType = VARCHAR }
        </if>
        <if test=" algoritmoSalida != null ">
            AND algoritmoSalida = #{ algoritmoSalida , jdbcType = VARCHAR }
        </if>
        <if test=" controlLote != null ">
            AND controlLote = #{ controlLote , jdbcType = INTEGER }
        </if>
        <if test=" peso != null ">
            AND peso = #{ peso , jdbcType = DOUBLE }
        </if>
        <if test=" alto != null ">
            AND alto = #{ alto , jdbcType = DOUBLE }
        </if>
        <if test=" largo != null ">
            AND largo = #{ largo , jdbcType = DOUBLE }
        </if>
        <if test=" ancho != null ">
            AND ancho = #{ ancho , jdbcType = DOUBLE }
        </if>
        <if test=" pathImagen != null ">
            AND pathImagen = #{ pathImagen , jdbcType = VARCHAR }
        </if>
        <if test=" controlStock != null ">
            AND controlStock = #{ controlStock , jdbcType = INTEGER }
        </if>
        <if test=" agrupaPicksSalida != null ">
            AND agrupaPicksSalida = #{ agrupaPicksSalida , jdbcType = INTEGER }
        </if>
        <if test=" familia != null ">
            AND familia = #{ familia , jdbcType = VARCHAR }
        </if>
        <if test=" controlNumeroSerie != null ">
            AND controlNumeroSerie = #{ controlNumeroSerie , jdbcType = VARCHAR }
        </if>
        <if test=" unidadMedidaPicking != null ">
            AND unidadMedidaPicking = #{ unidadMedidaPicking , jdbcType = VARCHAR }
        </if>
        <if test=" pesableMesa != null ">
            AND pesableMesa = #{ pesableMesa , jdbcType = VARCHAR }
        </if>
        <if test=" unidadMedidaPeso != null ">
            AND unidadMedidaPeso = #{ unidadMedidaPeso , jdbcType = VARCHAR }
        </if>
        <if test=" unidadMedidaVolumen != null ">
            AND unidadMedidaVolumen = #{ unidadMedidaVolumen , jdbcType = VARCHAR }
        </if>
        <if test=" tipoKit != null ">
            AND tipoKit = #{ tipoKit , jdbcType = VARCHAR }
        </if>
        <if test=" tipoFlujo != null ">
            AND tipoFlujo = #{ tipoFlujo , jdbcType = VARCHAR }
        </if>
        <if test=" epicentro != null ">
            AND epicentro = #{ epicentro , jdbcType = VARCHAR }
        </if>
        <if test=" precio != null ">
            AND precio = #{ precio , jdbcType = DOUBLE }
        </if>
        <if test=" datoExtra1 != null ">
            AND datoExtra1 = #{ datoExtra1 , jdbcType = VARCHAR }
        </if>
        <if test=" datoExtra2 != null ">
            AND datoExtra2 = #{ datoExtra2 , jdbcType = VARCHAR }
        </if>
        <if test=" datoExtra3 != null ">
            AND datoExtra3 = #{ datoExtra3 , jdbcType = VARCHAR }
        </if>
        <if test=" repartirCarruseles != null ">
            AND repartirCarruseles = #{ repartirCarruseles , jdbcType = VARCHAR }
        </if>
        <if test=" tratado != null ">
            AND tratado = #{ tratado , jdbcType = VARCHAR }
        </if>
        <if test=" error != null ">
            AND error = #{ error , jdbcType = VARCHAR }
        </if>
        <if test=" fechaTratado != null ">
            AND fechaTratado = #{ fechaTratado , jdbcType = TIMESTAMP }
        </if>
        <if test=" version != null ">
            AND version = #{ version , jdbcType = INTEGER }
        </if>
        <if test=" controlFormato != null ">
            AND controlFormato = #{ controlFormato , jdbcType = INTEGER }
        </if>
        <if test=" tipoArticulo != null ">
            AND tipoArticulo = #{ tipoArticulo , jdbcType = VARCHAR }
        </if>
        <if test=" tipoFisico != null ">
            AND tipoFisico = #{ tipoFisico , jdbcType = VARCHAR }
        </if>
        <if test=" nivEmbal1 != null ">
            AND nivEmbal1 = #{ nivEmbal1 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal2 != null ">
            AND nivEmbal2 = #{ nivEmbal2 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal3 != null ">
            AND nivEmbal3 = #{ nivEmbal3 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal4 != null ">
            AND nivEmbal4 = #{ nivEmbal4 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal5 != null ">
            AND nivEmbal5 = #{ nivEmbal5 , jdbcType = DOUBLE }
        </if>
        <if test=" precioVenta != null ">
            AND precioVenta = #{ precioVenta , jdbcType = DOUBLE }
        </if>
        <if test=" subFamilia != null ">
            AND subFamilia = #{ subFamilia , jdbcType = VARCHAR }
        </if>
        <if test=" ubicacionExterna != null ">
            AND ubicacionExterna = #{ ubicacionExterna , jdbcType = VARCHAR }
        </if>
        <if test=" controlExterno != null ">
            AND controlExterno = #{ controlExterno , jdbcType = VARCHAR }
        </if>
        <if test=" pedirPassScanner != null ">
            AND pedirPassScanner = #{ pedirPassScanner , jdbcType = VARCHAR }
        </if>
        <if test=" obsoleto != null ">
            AND obsoleto = #{ obsoleto , jdbcType = VARCHAR }
        </if>
        <if test=" orden != null ">
            AND orden = #{ orden , jdbcType = INTEGER }
        </if>
        <if test=" tipoInventario != null ">
            AND tipoInventario = #{ tipoInventario , jdbcType = VARCHAR }
        </if>
        <if test=" clasificaciones != null ">
            AND clasificaciones = #{ clasificaciones , jdbcType = VARCHAR }
        </if>
        <if test=" valoresClasificaciones != null ">
            AND valoresClasificaciones = #{ valoresClasificaciones , jdbcType = VARCHAR }
        </if>
        <if test=" fechaCreacion != null ">
            AND fechaCreacion = #{ fechaCreacion , jdbcType = TIMESTAMP }
        </if>
        <if test=" controlFechaCaducidad != null ">
            AND controlFechaCaducidad = #{ controlFechaCaducidad , jdbcType = VARCHAR }
        </if>
        <if test=" estadoStockConteo != null ">
            AND estadoStockConteo = #{ estadoStockConteo , jdbcType = VARCHAR }
        </if>
        <if test=" proveedor != null ">
            AND proveedor = #{ proveedor , jdbcType = VARCHAR }
        </if>
        <if test=" volumen != null ">
            AND volumen = #{ volumen , jdbcType = DOUBLE }
        </if>
        <if test=" controlCalidad != null ">
            AND controlCalidad = #{ controlCalidad , jdbcType = VARCHAR }
        </if>
        <if test=" latenciaEnvio != null ">
            AND latenciaEnvio = #{ latenciaEnvio , jdbcType = INTEGER }
        </if>
        <if test=" latenciaRecepcion != null ">
            AND latenciaRecepcion = #{ latenciaRecepcion , jdbcType = INTEGER }
        </if>
        <if test=" tipoEmpaquetado != null ">
            AND tipoEmpaquetado = #{ tipoEmpaquetado , jdbcType = VARCHAR }
        </if>
        <if test=" codigoAntiguo != null ">
            AND codigoAntiguo = #{ codigoAntiguo , jdbcType = VARCHAR }
        </if>
        <if test=" codigoProveedor != null ">
            AND codigoProveedor = #{ codigoProveedor , jdbcType = VARCHAR }
        </if>
        <if test=" diasCaducidad != null ">
            AND diasCaducidad = #{ diasCaducidad , jdbcType = INTEGER }
        </if>
        <if test=" estadoCalidad != null ">
            AND estadoCalidad = #{ estadoCalidad , jdbcType = VARCHAR }
        </if>
        <if test=" grupoCalidad != null ">
            AND grupoCalidad = #{ grupoCalidad , jdbcType = VARCHAR }
        </if>
        <if test=" gestionCinta != null ">
            AND gestionCinta = #{ gestionCinta , jdbcType = INTEGER }
        </if>
        <if test=" mantenerLoteMismoLoteProveedor != null ">
            AND mantenerLoteMismoLoteProveedor = #{ mantenerLoteMismoLoteProveedor , jdbcType = INTEGER }
        </if>
        <if test=" controlLoteFabricacion != null ">
            AND controlLoteFabricacion = #{ controlLoteFabricacion , jdbcType = INTEGER }
        </if>
        <if test=" generarLoteInternoEntrada != null ">
            AND generarLoteInternoEntrada = #{ generarLoteInternoEntrada , jdbcType = INTEGER }
        </if>
        <if test=" checkListDescarga != null ">
            AND checkListDescarga = #{ checkListDescarga , jdbcType = VARCHAR }
        </if>
        <if test=" refrigerado != null ">
            AND refrigerado = #{ refrigerado , jdbcType = INTEGER }
        </if>
        <if test=" propietario != null ">
            AND propietario = #{ propietario , jdbcType = VARCHAR }
        </if>
        LIMIT 0, 1
    </select>

    <select id="obtenerLista" resultType="com.seidor.ulises.model.ImpArticulos" parameterType="com.seidor.ulises.model.ImpArticulos" >
        SELECT id,
            articulo,
            descripcion,
            rotacion,
            algoritmoEntrada,
            algoritmoSalida,
            controlLote,
            peso,
            alto,
            largo,
            ancho,
            pathImagen,
            controlStock,
            agrupaPicksSalida,
            familia,
            controlNumeroSerie,
            unidadMedidaPicking,
            pesableMesa,
            unidadMedidaPeso,
            unidadMedidaVolumen,
            tipoKit,
            tipoFlujo,
            epicentro,
            precio,
            datoExtra1,
            datoExtra2,
            datoExtra3,
            repartirCarruseles,
            tratado,
            error,
            fechaTratado,
            version,
            controlFormato,
            tipoArticulo,
            tipoFisico,
            nivEmbal1,
            nivEmbal2,
            nivEmbal3,
            nivEmbal4,
            nivEmbal5,
            precioVenta,
            subFamilia,
            ubicacionExterna,
            controlExterno,
            pedirPassScanner,
            obsoleto,
            orden,
            tipoInventario,
            clasificaciones,
            valoresClasificaciones,
            fechaCreacion,
            controlFechaCaducidad,
            estadoStockConteo,
            proveedor,
            volumen,
            controlCalidad,
            latenciaEnvio,
            latenciaRecepcion,
            tipoEmpaquetado,
            codigoAntiguo,
            codigoProveedor,
            diasCaducidad,
            estadoCalidad,
            grupoCalidad,
            gestionCinta,
            mantenerLoteMismoLoteProveedor,
            controlLoteFabricacion,
            generarLoteInternoEntrada,
            checkListDescarga,
            refrigerado,
            propietario
        FROM impArticulos
        WHERE 1=1
        <if test=" articulo != null ">
            AND articulo = #{ articulo , jdbcType = VARCHAR }
        </if>
        <if test=" descripcion != null ">
            AND descripcion = #{ descripcion , jdbcType = VARCHAR }
        </if>
        <if test=" rotacion != null ">
            AND rotacion = #{ rotacion , jdbcType = VARCHAR }
        </if>
        <if test=" algoritmoEntrada != null ">
            AND algoritmoEntrada = #{ algoritmoEntrada , jdbcType = VARCHAR }
        </if>
        <if test=" algoritmoSalida != null ">
            AND algoritmoSalida = #{ algoritmoSalida , jdbcType = VARCHAR }
        </if>
        <if test=" controlLote != null ">
            AND controlLote = #{ controlLote , jdbcType = INTEGER }
        </if>
        <if test=" peso != null ">
            AND peso = #{ peso , jdbcType = DOUBLE }
        </if>
        <if test=" alto != null ">
            AND alto = #{ alto , jdbcType = DOUBLE }
        </if>
        <if test=" largo != null ">
            AND largo = #{ largo , jdbcType = DOUBLE }
        </if>
        <if test=" ancho != null ">
            AND ancho = #{ ancho , jdbcType = DOUBLE }
        </if>
        <if test=" pathImagen != null ">
            AND pathImagen = #{ pathImagen , jdbcType = VARCHAR }
        </if>
        <if test=" controlStock != null ">
            AND controlStock = #{ controlStock , jdbcType = INTEGER }
        </if>
        <if test=" agrupaPicksSalida != null ">
            AND agrupaPicksSalida = #{ agrupaPicksSalida , jdbcType = INTEGER }
        </if>
        <if test=" familia != null ">
            AND familia = #{ familia , jdbcType = VARCHAR }
        </if>
        <if test=" controlNumeroSerie != null ">
            AND controlNumeroSerie = #{ controlNumeroSerie , jdbcType = VARCHAR }
        </if>
        <if test=" unidadMedidaPicking != null ">
            AND unidadMedidaPicking = #{ unidadMedidaPicking , jdbcType = VARCHAR }
        </if>
        <if test=" pesableMesa != null ">
            AND pesableMesa = #{ pesableMesa , jdbcType = VARCHAR }
        </if>
        <if test=" unidadMedidaPeso != null ">
            AND unidadMedidaPeso = #{ unidadMedidaPeso , jdbcType = VARCHAR }
        </if>
        <if test=" unidadMedidaVolumen != null ">
            AND unidadMedidaVolumen = #{ unidadMedidaVolumen , jdbcType = VARCHAR }
        </if>
        <if test=" tipoKit != null ">
            AND tipoKit = #{ tipoKit , jdbcType = VARCHAR }
        </if>
        <if test=" tipoFlujo != null ">
            AND tipoFlujo = #{ tipoFlujo , jdbcType = VARCHAR }
        </if>
        <if test=" epicentro != null ">
            AND epicentro = #{ epicentro , jdbcType = VARCHAR }
        </if>
        <if test=" precio != null ">
            AND precio = #{ precio , jdbcType = DOUBLE }
        </if>
        <if test=" datoExtra1 != null ">
            AND datoExtra1 = #{ datoExtra1 , jdbcType = VARCHAR }
        </if>
        <if test=" datoExtra2 != null ">
            AND datoExtra2 = #{ datoExtra2 , jdbcType = VARCHAR }
        </if>
        <if test=" datoExtra3 != null ">
            AND datoExtra3 = #{ datoExtra3 , jdbcType = VARCHAR }
        </if>
        <if test=" repartirCarruseles != null ">
            AND repartirCarruseles = #{ repartirCarruseles , jdbcType = VARCHAR }
        </if>
        <if test=" tratado != null ">
            AND tratado = #{ tratado , jdbcType = VARCHAR }
        </if>
        <if test=" error != null ">
            AND error = #{ error , jdbcType = VARCHAR }
        </if>
        <if test=" fechaTratado != null ">
            AND fechaTratado = #{ fechaTratado , jdbcType = TIMESTAMP }
        </if>
        <if test=" version != null ">
            AND version = #{ version , jdbcType = INTEGER }
        </if>
        <if test=" controlFormato != null ">
            AND controlFormato = #{ controlFormato , jdbcType = INTEGER }
        </if>
        <if test=" tipoArticulo != null ">
            AND tipoArticulo = #{ tipoArticulo , jdbcType = VARCHAR }
        </if>
        <if test=" tipoFisico != null ">
            AND tipoFisico = #{ tipoFisico , jdbcType = VARCHAR }
        </if>
        <if test=" nivEmbal1 != null ">
            AND nivEmbal1 = #{ nivEmbal1 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal2 != null ">
            AND nivEmbal2 = #{ nivEmbal2 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal3 != null ">
            AND nivEmbal3 = #{ nivEmbal3 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal4 != null ">
            AND nivEmbal4 = #{ nivEmbal4 , jdbcType = DOUBLE }
        </if>
        <if test=" nivEmbal5 != null ">
            AND nivEmbal5 = #{ nivEmbal5 , jdbcType = DOUBLE }
        </if>
        <if test=" precioVenta != null ">
            AND precioVenta = #{ precioVenta , jdbcType = DOUBLE }
        </if>
        <if test=" subFamilia != null ">
            AND subFamilia = #{ subFamilia , jdbcType = VARCHAR }
        </if>
        <if test=" ubicacionExterna != null ">
            AND ubicacionExterna = #{ ubicacionExterna , jdbcType = VARCHAR }
        </if>
        <if test=" controlExterno != null ">
            AND controlExterno = #{ controlExterno , jdbcType = VARCHAR }
        </if>
        <if test=" pedirPassScanner != null ">
            AND pedirPassScanner = #{ pedirPassScanner , jdbcType = VARCHAR }
        </if>
        <if test=" obsoleto != null ">
            AND obsoleto = #{ obsoleto , jdbcType = VARCHAR }
        </if>
        <if test=" orden != null ">
            AND orden = #{ orden , jdbcType = INTEGER }
        </if>
        <if test=" tipoInventario != null ">
            AND tipoInventario = #{ tipoInventario , jdbcType = VARCHAR }
        </if>
        <if test=" clasificaciones != null ">
            AND clasificaciones = #{ clasificaciones , jdbcType = VARCHAR }
        </if>
        <if test=" valoresClasificaciones != null ">
            AND valoresClasificaciones = #{ valoresClasificaciones , jdbcType = VARCHAR }
        </if>
        <if test=" fechaCreacion != null ">
            AND fechaCreacion = #{ fechaCreacion , jdbcType = TIMESTAMP }
        </if>
        <if test=" controlFechaCaducidad != null ">
            AND controlFechaCaducidad = #{ controlFechaCaducidad , jdbcType = VARCHAR }
        </if>
        <if test=" estadoStockConteo != null ">
            AND estadoStockConteo = #{ estadoStockConteo , jdbcType = VARCHAR }
        </if>
        <if test=" proveedor != null ">
            AND proveedor = #{ proveedor , jdbcType = VARCHAR }
        </if>
        <if test=" volumen != null ">
            AND volumen = #{ volumen , jdbcType = DOUBLE }
        </if>
        <if test=" controlCalidad != null ">
            AND controlCalidad = #{ controlCalidad , jdbcType = VARCHAR }
        </if>
        <if test=" latenciaEnvio != null ">
            AND latenciaEnvio = #{ latenciaEnvio , jdbcType = INTEGER }
        </if>
        <if test=" latenciaRecepcion != null ">
            AND latenciaRecepcion = #{ latenciaRecepcion , jdbcType = INTEGER }
        </if>
        <if test=" tipoEmpaquetado != null ">
            AND tipoEmpaquetado = #{ tipoEmpaquetado , jdbcType = VARCHAR }
        </if>
        <if test=" codigoAntiguo != null ">
            AND codigoAntiguo = #{ codigoAntiguo , jdbcType = VARCHAR }
        </if>
        <if test=" codigoProveedor != null ">
            AND codigoProveedor = #{ codigoProveedor , jdbcType = VARCHAR }
        </if>
        <if test=" diasCaducidad != null ">
            AND diasCaducidad = #{ diasCaducidad , jdbcType = INTEGER }
        </if>
        <if test=" estadoCalidad != null ">
            AND estadoCalidad = #{ estadoCalidad , jdbcType = VARCHAR }
        </if>
        <if test=" grupoCalidad != null ">
            AND grupoCalidad = #{ grupoCalidad , jdbcType = VARCHAR }
        </if>
        <if test=" gestionCinta != null ">
            AND gestionCinta = #{ gestionCinta , jdbcType = INTEGER }
        </if>
        <if test=" mantenerLoteMismoLoteProveedor != null ">
            AND mantenerLoteMismoLoteProveedor = #{ mantenerLoteMismoLoteProveedor , jdbcType = INTEGER }
        </if>
        <if test=" controlLoteFabricacion != null ">
            AND controlLoteFabricacion = #{ controlLoteFabricacion , jdbcType = INTEGER }
        </if>
        <if test=" generarLoteInternoEntrada != null ">
            AND generarLoteInternoEntrada = #{ generarLoteInternoEntrada , jdbcType = INTEGER }
        </if>
        <if test=" checkListDescarga != null ">
            AND checkListDescarga = #{ checkListDescarga , jdbcType = VARCHAR }
        </if>
        <if test=" refrigerado != null ">
            AND refrigerado = #{ refrigerado , jdbcType = INTEGER }
        </if>
        <if test=" propietario != null ">
            AND propietario = #{ propietario , jdbcType = VARCHAR }
        </if>
    </select>
        
    <insert id="insertar" parameterType="com.seidor.ulises.model.ImpArticulos" >
        INSERT INTO impArticulos (
            articulo,
            descripcion,
            rotacion,
            algoritmoEntrada,
            algoritmoSalida,
            controlLote,
            peso,
            alto,
            largo,
            ancho,
            pathImagen,
            controlStock,
            agrupaPicksSalida,
            familia,
            controlNumeroSerie,
            unidadMedidaPicking,
            pesableMesa,
            unidadMedidaPeso,
            unidadMedidaVolumen,
            tipoKit,
            tipoFlujo,
            epicentro,
            precio,
            datoExtra1,
            datoExtra2,
            datoExtra3,
            repartirCarruseles,
            tratado,
            error,
            fechaTratado,
            version,
            controlFormato,
            tipoArticulo,
            tipoFisico,
            nivEmbal1,
            nivEmbal2,
            nivEmbal3,
            nivEmbal4,
            nivEmbal5,
            precioVenta,
            subFamilia,
            ubicacionExterna,
            controlExterno,
            pedirPassScanner,
            obsoleto,
            orden,
            tipoInventario,
            clasificaciones,
            valoresClasificaciones,
            fechaCreacion,
            controlFechaCaducidad,
            estadoStockConteo,
            proveedor,
            volumen,
            controlCalidad,
            latenciaEnvio,
            latenciaRecepcion,
            tipoEmpaquetado,
            codigoAntiguo,
            codigoProveedor,
            diasCaducidad,
            estadoCalidad,
            grupoCalidad,
            gestionCinta,
            mantenerLoteMismoLoteProveedor,
            controlLoteFabricacion,
            generarLoteInternoEntrada,
            checkListDescarga,
            refrigerado,
            propietario
        ) VALUES (
            #{ articulo , jdbcType = VARCHAR }
            , #{ descripcion , jdbcType = VARCHAR }
            , #{ rotacion , jdbcType = VARCHAR }
            , #{ algoritmoEntrada , jdbcType = VARCHAR }
            , #{ algoritmoSalida , jdbcType = VARCHAR }
            , #{ controlLote , jdbcType = INTEGER }
            , #{ peso , jdbcType = DOUBLE }
            , #{ alto , jdbcType = DOUBLE }
            , #{ largo , jdbcType = DOUBLE }
            , #{ ancho , jdbcType = DOUBLE }
            , #{ pathImagen , jdbcType = VARCHAR }
            , #{ controlStock , jdbcType = INTEGER }
            , #{ agrupaPicksSalida , jdbcType = INTEGER }
            , #{ familia , jdbcType = VARCHAR }
            , #{ controlNumeroSerie , jdbcType = VARCHAR }
            , #{ unidadMedidaPicking , jdbcType = VARCHAR }
            , #{ pesableMesa , jdbcType = VARCHAR }
            , #{ unidadMedidaPeso , jdbcType = VARCHAR }
            , #{ unidadMedidaVolumen , jdbcType = VARCHAR }
            , #{ tipoKit , jdbcType = VARCHAR }
            , #{ tipoFlujo , jdbcType = VARCHAR }
            , #{ epicentro , jdbcType = VARCHAR }
            , #{ precio , jdbcType = DOUBLE }
            , #{ datoExtra1 , jdbcType = VARCHAR }
            , #{ datoExtra2 , jdbcType = VARCHAR }
            , #{ datoExtra3 , jdbcType = VARCHAR }
            , #{ repartirCarruseles , jdbcType = VARCHAR }
            , #{ tratado , jdbcType = VARCHAR }
            , #{ error , jdbcType = VARCHAR }
            , #{ fechaTratado , jdbcType = TIMESTAMP }
            , #{ version , jdbcType = INTEGER }
            , #{ controlFormato , jdbcType = INTEGER }
            , #{ tipoArticulo , jdbcType = VARCHAR }
            , #{ tipoFisico , jdbcType = VARCHAR }
            , #{ nivEmbal1 , jdbcType = DOUBLE }
            , #{ nivEmbal2 , jdbcType = DOUBLE }
            , #{ nivEmbal3 , jdbcType = DOUBLE }
            , #{ nivEmbal4 , jdbcType = DOUBLE }
            , #{ nivEmbal5 , jdbcType = DOUBLE }
            , #{ precioVenta , jdbcType = DOUBLE }
            , #{ subFamilia , jdbcType = VARCHAR }
            , #{ ubicacionExterna , jdbcType = VARCHAR }
            , #{ controlExterno , jdbcType = VARCHAR }
            , #{ pedirPassScanner , jdbcType = VARCHAR }
            , #{ obsoleto , jdbcType = VARCHAR }
            , #{ orden , jdbcType = INTEGER }
            , #{ tipoInventario , jdbcType = VARCHAR }
            , #{ clasificaciones , jdbcType = VARCHAR }
            , #{ valoresClasificaciones , jdbcType = VARCHAR }
            , #{ fechaCreacion , jdbcType = TIMESTAMP }
            , #{ controlFechaCaducidad , jdbcType = VARCHAR }
            , #{ estadoStockConteo , jdbcType = VARCHAR }
            , #{ proveedor , jdbcType = VARCHAR }
            , #{ volumen , jdbcType = DOUBLE }
            , #{ controlCalidad , jdbcType = VARCHAR }
            , #{ latenciaEnvio , jdbcType = INTEGER }
            , #{ latenciaRecepcion , jdbcType = INTEGER }
            , #{ tipoEmpaquetado , jdbcType = VARCHAR }
            , #{ codigoAntiguo , jdbcType = VARCHAR }
            , #{ codigoProveedor , jdbcType = VARCHAR }
            , #{ diasCaducidad , jdbcType = INTEGER }
            , #{ estadoCalidad , jdbcType = VARCHAR }
            , #{ grupoCalidad , jdbcType = VARCHAR }
            , #{ gestionCinta , jdbcType = INTEGER }
            , #{ mantenerLoteMismoLoteProveedor , jdbcType = INTEGER }
            , #{ controlLoteFabricacion , jdbcType = INTEGER }
            , #{ generarLoteInternoEntrada , jdbcType = INTEGER }
            , #{ checkListDescarga , jdbcType = VARCHAR }
            , #{ refrigerado , jdbcType = INTEGER }
            , #{ propietario , jdbcType = VARCHAR }
        )
    </insert>

    <insert id="registraImpArticulosList" parameterType="java.util.List" useGeneratedKeys="false" >
        INSERT INTO impArticulos (
            articulo,
            descripcion,
            rotacion,
            algoritmoEntrada,
            algoritmoSalida,
            controlLote,
            peso,
            alto,
            largo,
            ancho,
            pathImagen,
            controlStock,
            agrupaPicksSalida,
            familia,
            controlNumeroSerie,
            unidadMedidaPicking,
            pesableMesa,
            unidadMedidaPeso,
            unidadMedidaVolumen,
            tipoKit,
            tipoFlujo,
            epicentro,
            precio,
            datoExtra1,
            datoExtra2,
            datoExtra3,
            repartirCarruseles,
            tratado,
            error,
            fechaTratado,
            version,
            controlFormato,
            tipoArticulo,
            tipoFisico,
            nivEmbal1,
            nivEmbal2,
            nivEmbal3,
            nivEmbal4,
            nivEmbal5,
            precioVenta,
            subFamilia,
            ubicacionExterna,
            controlExterno,
            pedirPassScanner,
            obsoleto,
            orden,
            tipoInventario,
            clasificaciones,
            valoresClasificaciones,
            fechaCreacion,
            controlFechaCaducidad,
            estadoStockConteo,
            proveedor,
            volumen,
            controlCalidad,
            latenciaEnvio,
            latenciaRecepcion,
            tipoEmpaquetado,
            codigoAntiguo,
            codigoProveedor,
            diasCaducidad,
            estadoCalidad,
            grupoCalidad,
            gestionCinta,
            mantenerLoteMismoLoteProveedor,
            controlLoteFabricacion,
            generarLoteInternoEntrada,
            checkListDescarga,
            refrigerado,
            propietario
        ) VALUES
        <foreach collection="list" item="item" separator="," index="index">  
        (
            #{ item.articulo , jdbcType = VARCHAR }
            , #{ item.descripcion , jdbcType = VARCHAR }
            , #{ item.rotacion , jdbcType = VARCHAR }
            , #{ item.algoritmoEntrada , jdbcType = VARCHAR }
            , #{ item.algoritmoSalida , jdbcType = VARCHAR }
            , #{ item.controlLote , jdbcType = INTEGER }
            , #{ item.peso , jdbcType = DOUBLE }
            , #{ item.alto , jdbcType = DOUBLE }
            , #{ item.largo , jdbcType = DOUBLE }
            , #{ item.ancho , jdbcType = DOUBLE }
            , #{ item.pathImagen , jdbcType = VARCHAR }
            , #{ item.controlStock , jdbcType = INTEGER }
            , #{ item.agrupaPicksSalida , jdbcType = INTEGER }
            , #{ item.familia , jdbcType = VARCHAR }
            , #{ item.controlNumeroSerie , jdbcType = VARCHAR }
            , #{ item.unidadMedidaPicking , jdbcType = VARCHAR }
            , #{ item.pesableMesa , jdbcType = VARCHAR }
            , #{ item.unidadMedidaPeso , jdbcType = VARCHAR }
            , #{ item.unidadMedidaVolumen , jdbcType = VARCHAR }
            , #{ item.tipoKit , jdbcType = VARCHAR }
            , #{ item.tipoFlujo , jdbcType = VARCHAR }
            , #{ item.epicentro , jdbcType = VARCHAR }
            , #{ item.precio , jdbcType = DOUBLE }
            , #{ item.datoExtra1 , jdbcType = VARCHAR }
            , #{ item.datoExtra2 , jdbcType = VARCHAR }
            , #{ item.datoExtra3 , jdbcType = VARCHAR }
            , #{ item.repartirCarruseles , jdbcType = VARCHAR }
            , #{ item.tratado , jdbcType = VARCHAR }
            , #{ item.error , jdbcType = VARCHAR }
            , #{ item.fechaTratado , jdbcType = TIMESTAMP }
            , #{ item.version , jdbcType = INTEGER }
            , #{ item.controlFormato , jdbcType = INTEGER }
            , #{ item.tipoArticulo , jdbcType = VARCHAR }
            , #{ item.tipoFisico , jdbcType = VARCHAR }
            , #{ item.nivEmbal1 , jdbcType = DOUBLE }
            , #{ item.nivEmbal2 , jdbcType = DOUBLE }
            , #{ item.nivEmbal3 , jdbcType = DOUBLE }
            , #{ item.nivEmbal4 , jdbcType = DOUBLE }
            , #{ item.nivEmbal5 , jdbcType = DOUBLE }
            , #{ item.precioVenta , jdbcType = DOUBLE }
            , #{ item.subFamilia , jdbcType = VARCHAR }
            , #{ item.ubicacionExterna , jdbcType = VARCHAR }
            , #{ item.controlExterno , jdbcType = VARCHAR }
            , #{ item.pedirPassScanner , jdbcType = VARCHAR }
            , #{ item.obsoleto , jdbcType = VARCHAR }
            , #{ item.orden , jdbcType = INTEGER }
            , #{ item.tipoInventario , jdbcType = VARCHAR }
            , #{ item.clasificaciones , jdbcType = VARCHAR }
            , #{ item.valoresClasificaciones , jdbcType = VARCHAR }
            , #{ item.fechaCreacion , jdbcType = TIMESTAMP }
            , #{ item.controlFechaCaducidad , jdbcType = VARCHAR }
            , #{ item.estadoStockConteo , jdbcType = VARCHAR }
            , #{ item.proveedor , jdbcType = VARCHAR }
            , #{ item.volumen , jdbcType = DOUBLE }
            , #{ item.controlCalidad , jdbcType = VARCHAR }
            , #{ item.latenciaEnvio , jdbcType = INTEGER }
            , #{ item.latenciaRecepcion , jdbcType = INTEGER }
            , #{ item.tipoEmpaquetado , jdbcType = VARCHAR }
            , #{ item.codigoAntiguo , jdbcType = VARCHAR }
            , #{ item.codigoProveedor , jdbcType = VARCHAR }
            , #{ item.diasCaducidad , jdbcType = INTEGER }
            , #{ item.estadoCalidad , jdbcType = VARCHAR }
            , #{ item.grupoCalidad , jdbcType = VARCHAR }
            , #{ item.gestionCinta , jdbcType = INTEGER }
            , #{ item.mantenerLoteMismoLoteProveedor , jdbcType = INTEGER }
            , #{ item.controlLoteFabricacion , jdbcType = INTEGER }
            , #{ item.generarLoteInternoEntrada , jdbcType = INTEGER }
            , #{ item.checkListDescarga , jdbcType = VARCHAR }
            , #{ item.refrigerado , jdbcType = INTEGER }
            , #{ item.propietario , jdbcType = VARCHAR }
        )
        </foreach>
    </insert>
</mapper>